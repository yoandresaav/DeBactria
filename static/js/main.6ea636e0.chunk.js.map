{"version":3,"sources":["services/getWeb3.js","components/ConnectLink.js","store/actions/loadAccounts.js","store/actionTypes.js","containers/Header.js","components/Home.js","services/web3.js","services/campaignfactory.js","store/actions/deployedCampaigns.js","components/Error.js","components/NewCampaign.js","store/actions/getCampaignDetails.js","components/ShowCampaign.js","store/actions/getRequests.js","components/Requests.js","components/NewRequest.js","containers/App.js","serviceWorker.js","store/reducers/loadAccounts.js","store/reducers/deployedCampaigns.js","store/reducers/getCampaignDetails.js","store/reducers/getRequests.js","store/reducers/index.js","store/index.js","index.js"],"names":["getWeb3","Promise","resolve","reject","a","window","ethereum","isMetaMask","web","Web3","enable","alert","web3","givenProvider","console","log","ConnectLink","this","props","account","undefined","className","onClick","dispatch","web3Instance","eth","getAccounts","accounts","type","slice","Component","connect","state","loadAccounts","Header","to","Home","campaigns","style","width","deployedCampaigns","map","value","index","id","key","marginBottom","margin","marginTop","whiteSpace","display","marginLeft","initWeb3","currentProvider","provider","providers","HttpProvider","CONTRACT_ID","process","factory","Contract","abi","factoryInstance","methods","getDeployedCampaigns","call","Error","React","NewCampaign","errorMessage","errorVisible","handlingTransaction","handleFormSubmit","bind","handleInputChange","store","e","isFinite","target","setState","preventDefault","minContribution","length","createCampaign","send","from","history","push","setTimeout","onSubmit","onChange","placeholder","getCampaignDetails","campaignInstance","res","minimumContribution","balance","utils","fromWei","approversCount","requestsLength","manager","ShowCampaign","loading","contribution","match","params","weiValue","toWei","contribute","message","color","getRequests","Campaign","getRequestsCount","reqLength","requests","i","req","Requests","approveRequest","finalizeRequest","uid","CampaignInstance","val","completed","description","fontSize","recipient","textAlign","approvalCount","opacity","NewRequest","handleFormChanges","createRequest","cn","App","path","component","exact","Boolean","location","hostname","defaultState","accountObj","rootReducer","combineReducers","action","logger","createLogger","collapsed","diff","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.6ea636e0.chunk.js","sourcesContent":["import Web3 from 'web3';\n\nconst getWeb3 = () => {\n  \n  return new Promise( async (resolve, reject) => {\n    // window.addEventListener('load', function(){\n      let web;\n      if (window.ethereum && window.ethereum.isMetaMask){\n        web = new Web3(window.ethereum);\n        try {\n            // Request account access if needed\n            await window.ethereum.enable();\n            // Acccounts now exposed\n            resolve(web);\n        } catch (error) {\n            // User denied account access...\n            alert('User has denied account access to Wallet')\n        }\n      } else if (window.web3) {\n        web = new Web3(Web3.givenProvider || \"ws://localhost:7545\");\n        resolve(web);\n      } else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n        reject()\n      }\n\n    // });\n  });\n}\n\nexport default getWeb3;","import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport {loadAccounts} from \"../store/actions/loadAccounts\";\n\nclass ConnectLink extends Component{\n\n  render(){\n    return (\n      <>\n        {(this.props.account === 0 || this.props.account === undefined) ?\n          <a className=\"link-connect\" onClick={()=>{this.props.dispatch(loadAccounts())}}>\n            Connect to a Wallet \n          </a>\n          :\n          <a className=\"link-connect\">\n            {`${this.props.account.slice(0, 6)}...${this.props.account.slice(-6)}`}\n          </a>\n        }\n      </>\n    )\n    \n  }\n}\n\nfunction mapStateToProps(state){\n  const statusAccount = {\n    account: state.loadAccounts.account,\n  }\n  return statusAccount;\n}\n\nexport default connect(mapStateToProps, null)(ConnectLink);","import {LOAD_ACCOUNTS} from \"../actionTypes\";\nimport getWeb3 from \"../../services/getWeb3\";\n\nexport function loadAccounts(){\n    return async function(dispatch){\n      \n      const web3Instance = await getWeb3();\n\n      if (web3Instance === null  || web3Instance.eth === null) {\n        alert('Not access to wallet')\n        return\n      }\n\n      const accounts = await web3Instance.eth.getAccounts();\n\n        dispatch({\n            type: LOAD_ACCOUNTS,\n            account: accounts[0]\n        });\n    }\n}","export const LOAD_ACCOUNTS = \"LOAD_ACCOUNTS\";\nexport const DEPLOYED_CAMPAIGNS = \"DEPLOYED_CAMPAIGNS\";\nexport const GET_CAMPAIGN_DETAILS = \"GET_CAMPAIGN_DETAILS\";\nexport const GET_REQUESTS = \"GET_REQUESTS\";","import React,{Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport ConnectLink from '../components/ConnectLink';\nimport {connect} from \"react-redux\";\nimport \"../Home.css\";\n\nclass Header extends Component{\n  render(){\n      console.log('Propsssss', this.props.account)\n        return <div className=\"header\">\n            <div className=\"left-nav\">\n                <Link to=\"/\">DeBactria</Link>\n            </div>\n            {(this.props.account !== 0 && this.props.account !== undefined) &&\n              <div className=\"right-nav\">\n                  <Link to=\"/campaigns/new\">Create Campaign</Link>\n              </div>}\n            <div className=\"last-div\">\n              <ConnectLink />\n            </div>\n        </div>\n    }\n}\n\nfunction mapStateToProps(state) {\n  const statusAccount = {\n    account: state.loadAccounts.account,\n  }\n  return statusAccount;\n}\n\nexport default connect(mapStateToProps, null)(Header);","import React,{Component} from 'react';\nimport Header from \"../containers/Header\";\nimport \"../Home.css\";\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\n\nclass Home extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            \"loading\": true\n        }\n    }\n\n    render(){\n        return <div className=\"home\">\n            <Header></Header>\n            <h2>Open Campaigns</h2>\n            <div className=\"main-body\">\n                <div className=\"main-body-left\">\n                    {this.props.campaigns}\n                </div>\n                {/* <div className=\"loader-container\" style={this.state.loading?{display: \"flex\"}:{display:\" none\"}}>\n                    <div className=\"loader\"></div>\n                </div> */}\n                \n                {(this.props.account !== 0 && this.props.account !== undefined) ?\n                  <Link to=\"/campaigns/new\">\n                      <div className=\"main-body-right\">\n                          <div className=\"plus-border\">+</div>\n                          <p>Create Campaign</p>\n                      </div>\n                  </Link>\n                  :\n                  <p style={{width: 250}}>\n                    Link the wallet and add new campaign\n                  </p>\n                }\n            </div>\n        </div>\n    }\n}\n\nfunction mapStateToProps(state){\n    let campaigns =  state.deployedCampaigns.campaigns.map((value,index)=>{\n        return  (\n          <div className=\"list\" id={index} key={index} style={{marginBottom: \"16px\"}}>\n              {value}\n              <div>\n                <Link to={`/campaigns/${value}`}>\n                  <p id={index} style={{margin:\"0\",marginTop:\"8px\",whiteSpace:'nowrap', display:'inline-block'}}>\n                    View Campaign</p></Link>\n                \n                <Link to={`/campaigns/${value}/requests`}>\n                  <p style={{margin:\"0\",marginTop:\"8px\",whiteSpace:'nowrap',display:'inline-block',marginLeft:'20px'}}>\n                    View Requests</p></Link>\n\n              </div>\n          </div>\n        );\n    });\n    let newState = {\n        campaigns: campaigns,\n        account: state.loadAccounts.account,\n    }\n    return newState;\n}\n\nexport default connect(mapStateToProps,null)(Home);","import Web3 from 'web3';\n\nlet web3;\n\nexport default async function initWeb3(){\n    if(window.web3){\n      web3 = new Web3(window.web3.currentProvider);\n    } else{\n        const provider = new Web3.providers.HttpProvider(\n            \"https://apis.ankr.com/60a2b6d260f6408f8c893e43fe60861d/436c4191c3a955c822236c8f1a306d98/binance/full/test\"\n        );\n        web3 = new Web3(provider);\n    }\n    return web3;\n}","import initWeb3 from \"./web3\";\nimport {abi} from \"../build/CampaignFactory.json\";\n\nconst CONTRACT_ID = process.env.REACT_APP_CONTRACT_ID || '0xd1a7B687D1961d0e8d94bdB7cC8Fd2D961E47f72'\n\nexport default async function factory(){\n    const web3 = await initWeb3();\n    let factory = await new web3.eth.Contract(\n            abi,\n            CONTRACT_ID,\n        );\n    return factory;\n}","import {DEPLOYED_CAMPAIGNS} from \"../actionTypes\";\nimport factory from \"../../services/campaignfactory\";\n\nexport function deployedCampaigns(){\n    return async function(dispatch){\n        const factoryInstance = await factory();\n        const campaigns = await factoryInstance.methods.getDeployedCampaigns().call();\n        console.log('campaigns: ', campaigns)\n        dispatch({\n            type: DEPLOYED_CAMPAIGNS,\n            campaigns: campaigns\n        })\n    }\n}","import React from \"react\";\n\nexport default class Error extends React.Component{\n    render(){\n        return <div>Error</div>\n    }\n}","import React,{Component} from \"react\";\nimport Header from \"../containers/Header\";\nimport factory from \"../services/campaignfactory\";\nimport {connect} from \"react-redux\";\nimport {deployedCampaigns} from \"../store/actions/deployedCampaigns\";\nimport {loadAccounts} from \"../store/actions/loadAccounts\";\nimport \"../Home.css\";\n\nclass NewCampaign extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            value: \"\",\n            errorMessage: \"\",\n            errorVisible: false,\n            handlingTransaction: false\n        }\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n      \n        console.log('El store tiene: ', this.store)\n    }\n\n    handleInputChange(e){\n        if(isFinite(e.target.value)){\n            this.setState({\n                value: e.target.value\n            });\n        }\n    }\n\n    async handleFormSubmit(e){\n        e.preventDefault();\n        const minContribution = this.state.value;\n        if(minContribution.length>0){\n            const factoryInstance = await factory();\n            this.setState({\n                handlingTransaction: true\n            });\n            const thash = await factoryInstance.methods.createCampaign(minContribution).send({\n                from: this.props.account,\n            });\n            await this.props.dispatch(deployedCampaigns());\n            this.props.history.push(\"/\");\n            // }\n            // catch(e){\n            //     this.setState({\n            //         errorMessage: e.message,\n            //         errorVisible: true\n            //     });\n            //     setTimeout( () => {\n            //         this.setState({\n            //             errorMessage: \"\",\n            //             errorVisible: false\n            //         });\n            //     },3000);\n            // }\n            // finally{\n            this.setState({\n                handlingTransaction: false\n            });\n            // }\n        } else{\n            this.setState({\n                errorMessage: \"Minimum Contribution field cannot be empty\",\n                errorVisible: true\n            });\n            setTimeout( () => {\n                this.setState({\n                    errorMessage: \"\",\n                    errorVisible: false\n                });\n            },3000);\n        }\n    }\n\n    render(){\n        return <div className=\"new-campaign-page\">\n            <Header></Header>\n            <h2>Create a Campaign</h2>\n            <h3>Minimum Contribution</h3>\n            <form onSubmit={this.handleFormSubmit}>\n                <div className=\"input-box\">\n                    <input type=\"text\" value={this.state.value} onChange={this.handleInputChange} placeholder=\"Minimum Contribution(in Wei)\"></input>\n                    <div>wei</div>\n                </div>\n                <div className=\"error-message\" style={this.state.errorVisible?{display: \"block\"}:{display: \"none\"}} >{this.state.errorMessage}</div>\n                <div className=\"button\" onClick={this.handleFormSubmit}>\n                    <p style={this.state.handlingTransaction?{display: \"none\"}:{display: \"block\"}}>Create!</p>\n                    <div className=\"loader\" style={this.state.handlingTransaction?{display: \"block\"}:{display: \"none\"}}></div>\n                </div>\n            </form>\n        </div>\n    }\n}\n\nfunction mapStateToProps(state){\n    const statusAccount = {\n      account: state.loadAccounts.account,\n    }\n    return statusAccount;\n}\n\nexport default connect(mapStateToProps,null)(NewCampaign);","import {GET_CAMPAIGN_DETAILS} from \"../actionTypes\";\nimport initWeb3 from \"../../services/web3\";\nimport {abi} from \"../../build/Campaign.json\";\n\nexport function getCampaignDetails(id){\n    return async dispatch =>{\n        const web3Instance = await initWeb3();\n        const campaignInstance = await new web3Instance.eth.Contract(\n            abi,\n            id\n        );\n        const res = await campaignInstance.methods.getCampaignDetails().call();\n        dispatch({\n            type: GET_CAMPAIGN_DETAILS,\n            minimumContribution: res[0],\n            balance: web3Instance.utils.fromWei(res[1],'ether'),\n            approversCount: res[2],\n            requestsLength: res[3],\n            manager: res[4]\n        });\n    };\n}","import React,{Component} from \"react\";\nimport Header from \"../containers/Header\";\nimport \"../Home.css\";\nimport {getCampaignDetails} from \"../store/actions/getCampaignDetails\";\nimport {connect} from \"react-redux\";\nimport initWeb3 from \"../services/web3\";\nimport {abi} from \"../build/Campaign.json\";\nimport {Link} from \"react-router-dom\";\n\nclass ShowCampaign extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            value: \"\",\n            handlingTransaction: false,\n            errorMessage: \"\",\n            errorVisible: false,\n            loading: true\n        }\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    componentWillReceiveProps(){\n        this.setState({\n            loading: false\n        });\n    }\n\n    handleInputChange(e){\n        if(isFinite(e.target.value)){\n            this.setState({\n                value: e.target.value\n            });\n        }\n    }\n\n    async handleFormSubmit(e){\n        e.preventDefault();\n        const contribution = this.state.value;\n        \n        if(contribution.length>0){\n            const web3Instance = await initWeb3();\n            const accounts = await web3Instance.eth.getAccounts();\n            const campaignInstance = await new web3Instance.eth.Contract(\n                abi,\n                this.props.match.params.id\n            );\n            try{\n                this.setState({\n                    handlingTransaction: true\n                });\n                const weiValue = web3Instance.utils.toWei(contribution,'ether');\n\n                const thash = await campaignInstance.methods.contribute().send({\n                    from: accounts[0],\n                    value: weiValue\n                });\n                \n                const id = this.props.match.params.id;\n                this.props.dispatch(getCampaignDetails(id));\n            }\n            catch(e){\n                this.setState({\n                    errorMessage: e.message,\n                    errorVisible: true\n                });\n                setTimeout( () => {\n                    this.setState({\n                        errorMessage: \"\",\n                        errorVisible: false\n                    });\n                },3000);\n            }\n            finally{\n                this.setState({\n                    handlingTransaction: false\n                });\n            }\n        }\n        else{\n            this.setState({\n                errorMessage: \"Minimum Contribution field cannot be empty\",\n                errorVisible: true\n            });\n            setTimeout( () => {\n                this.setState({\n                    errorMessage: \"\",\n                    errorVisible: false\n                });\n            },3000);\n        }\n    }\n\n    async componentDidMount(){\n        const id = this.props.match.params.id;\n        this.props.dispatch(getCampaignDetails(id));\n    }\n\n    render(){\n        const {minimumContribution,balance,approversCount,requestsLength,manager} = this.props.getCampaignDetails;\n        return <div className=\"show-campaigns\">\n            <Header></Header>\n            <h2>Campaign Show</h2>\n            <div className=\"show-campaigns-main\">\n                <div className=\"card-grid\"  style={this.state.loading?{display:\"none\"}:{display:\"flex\"}}>\n                    <div className=\"card-row\">\n                        <div className=\"card\">\n                            <h1>{manager}</h1>\n                            <p className=\"first-p\" style={{color: \"#a9a9a9\"}}>Address of Manager</p>\n                            <p>The manager created this campaign and can create requests to withdraw money</p>\n                        </div>\n                        <div className=\"card\">\n                            <h1>{minimumContribution}</h1>\n                            <p className=\"first-p\" style={{color: \"#a9a9a9\"}}>Minimum Contribution(wei)</p>\n                            <p>You must contribute at least this much wei to become a contributor</p>\n                        </div>\n                    </div>\n                    \n                    <div className=\"card-row\">\n                        <div className=\"card\">\n                            <h1>{requestsLength}</h1>\n                            <p className=\"first-p\" style={{color: \"#a9a9a9\"}}>Number of Requests</p>\n                            <p>A request tries to withdraw money from the contract. Requests must be approved by approvers.</p>\n                        </div>\n                        <div className=\"card\">\n                            <h1>{approversCount}</h1>\n                            <p className=\"first-p\" style={{color: \"#a9a9a9\"}}>Number of Approvers</p>\n                            <p>Number of people who have already donated to this campaign</p>\n                        </div>\n                    </div>\n\n                    <div className=\"card-row\">\n                        <div className=\"card\">\n                            <h1>{balance}</h1>\n                            <p className=\"first-p\" style={{color: \"#a9a9a9\"}}>Campaign Balance(ether)</p>\n                            <p>The balance is how much money this campaign has left to spend</p>\n                        </div>\n                    </div>\n\n                    <Link to={`/campaigns/${this.props.match.params.id}/requests`}>\n                        <div className=\"button\">\n                            <p >View Requests</p>\n                        </div>\n                    </Link>\n\n                </div>\n                <div className=\"loader-container\" style={this.state.loading?{display: \"flex\"}:{display:\" none\"}}>\n                    <div className=\"loader\"></div>\n                </div>\n                <form onSubmit={this.handleFormSubmit}>\n                    <p>Amount to Contribute</p>\n                    <div className=\"input-box\">\n                        <input type=\"text\" value={this.state.value} onChange={this.handleInputChange} placeholder=\"Contribute\"></input>\n                        <div style={{width: \"15%\"}}>ether</div>\n                    </div>\n                    <div className=\"error-message\" style={this.state.errorVisible?{display: \"block\"}:{display: \"none\"}} >{this.state.errorMessage}</div>\n                    <div className=\"button\" onClick={this.handleFormSubmit}>\n                        <p style={this.state.handlingTransaction?{display: \"none\"}:{display: \"block\"}}>Contribute!</p>\n                        <div className=\"loader\" style={this.state.handlingTransaction?{display: \"block\"}:{display: \"none\"}}></div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    }\n}\n\nfunction mapStateToProps(state){\n    return state;\n}\n\nexport default connect(mapStateToProps,null)(ShowCampaign);","import {GET_REQUESTS} from \"../actionTypes\";\nimport {abi} from \"../../build/Campaign.json\";\nimport initWeb3 from \"../../services/getWeb3\";\n\nexport function getRequests(id){\n    return async dispatch=>{\n        const web3Instance = await initWeb3();\n        const Campaign = await new web3Instance.eth.Contract(\n            abi,\n            id\n        );\n        const reqLength = await Campaign.methods.getRequestsCount().call();\n        let requests = [];\n        for(let i=0;i<reqLength;i++){\n            const req = await Campaign.methods.requests(i).call();\n            requests.push(req);\n        }\n        const approversCount = await Campaign.methods.approversCount().call();\n        dispatch({\n            type: GET_REQUESTS,\n            requests: requests,\n            approversCount: approversCount\n        })\n    }\n}","import React,{Component} from \"react\";\nimport Header from \"../containers/Header\";\nimport {Link} from \"react-router-dom\";\nimport {getRequests} from \"../store/actions/getRequests\";\nimport {connect} from \"react-redux\";\nimport web3 from \"web3\";\nimport initWeb3 from \"../services/web3\";\nimport {abi} from \"../build/Campaign.json\";\n\nclass Requests extends Component{\n\n    constructor(props){\n        super(props);\n        this.approveRequest = this.approveRequest.bind(this);\n        this.finalizeRequest = this.finalizeRequest.bind(this);\n        this.state = {\n            \"loading\": true,\n            \"errorVisible\": false,\n            'errorMessage': \"\",\n            requests: []\n        }\n    }\n\n    async approveRequest(e){\n        const uid = e.target.id;\n        const id = this.props.match.params.id;\n        const web3Instance = await initWeb3();\n        const CampaignInstance = await new web3Instance.eth.Contract(\n            abi,\n            id\n        );\n        const accounts = await web3Instance.eth.getAccounts();\n        try{\n            this.setState({\n                \"loading\": true\n            })\n            await CampaignInstance.methods.approveRequest(uid).send({\n                from: accounts[0]\n            });\n            await this.props.dispatch(getRequests(id));\n        }\n        catch(e){\n            this.setState({\n                \"loading\": false,\n                \"errorVisible\": true,\n                \"errorMessage\": e.message\n            });\n            setTimeout(()=>{\n                this.setState({\n                    \"errorVisible\": false,\n                    \"errorMessage\": \"\"\n                })\n            },3000);\n        }\n    }\n\n    async finalizeRequest(e){\n        const uid = e.target.id;\n        const id = this.props.match.params.id;\n        const web3Instance = await initWeb3();\n        const CampaignInstance = await new web3Instance.eth.Contract(\n            abi,\n            id\n        );\n        const accounts = await web3Instance.eth.getAccounts();\n        try{\n            this.setState({\n                \"loading\": true\n            })\n            await CampaignInstance.methods.finalizeRequest(uid).send({\n                from: accounts[0]\n            });\n            await this.props.dispatch(getRequests(id));\n        }\n        catch(e){\n            this.setState({\n                \"loading\": false,\n                \"errorVisible\": true,\n                \"errorMessage\": e.message\n            });\n            setTimeout(()=>{\n                this.setState({\n                    \"errorVisible\": false,\n                    \"errorMessage\": \"\"\n                })\n            },3000);\n        }\n    }\n\n    async componentDidMount(){\n        await this.props.dispatch(getRequests(this.props.match.params.id));\n    }\n\n    componentWillReceiveProps(){\n        this.setState({\n            \"loading\": false\n        });\n    }\n\n    render(){\n        const approversCount = this.props.approversCount;\n        let requests = this.props.requests.map((value,index)=>{\n            let val = web3.utils.fromWei(value.value,\"ether\");\n            console.log(value.completed);\n            return <tr key={index}>\n                <td className={value.completed?\"one modified\":\"one\"}><p>{index+1}</p></td>\n                <td className={value.completed===false?\"two modified\":\"two\"}><p>{value.description}</p></td>\n                <td className={value.completed?\"three modified\":\"three\"}><p>{val}</p></td>\n                <td className={value.completed?\"four modified\":\"four\"}><p style={{fontSize:12}}>{value.recipient}</p></td>\n                <td className={value.completed?\"five modified\":\"five\"} style={{textAlign: 'right'}}><p>{`${value.approvalCount}/${approversCount}`}</p></td>\n                \n                <td className=\"six\" id={index} style={value.completed?{opacity:\"0\"}:{opacity:\"1\"}}>\n                  <div className=\"table-button\" id={index} onClick={this.approveRequest}>\n                    <p id={index} onClick={this.approveRequest}>Approve</p>\n                  </div>\n                </td>\n                <td className=\"seven\" id={index} style={value.completed?{opacity:\"0\"}:{opacity:\"1\"}}>\n                  <div className=\"table-button table-button-two\" id={index} onClick={this.finalizeRequest}>\n                    <p id={index} onClick={this.finalizeRequest}>Finalize</p>\n                  </div>\n                </td>\n            </tr>\n        });\n        return <div className=\"requests\">\n            <Header></Header>\n            <h2>Requests</h2>\n            <div className=\"link-container\">\n                <Link to={`/campaigns/${this.props.match.params.id}/requests/new`}>\n                    <div className=\"button\">\n                        <p style={{ whiteSpace:'nowrap'}}>Add Request</p>\n                    </div>\n                </Link>\n            </div>\n            <table style={this.state.loading?{display: \"none\"}:{display:\"block\"}}>\n                <tr>\n                    <th className=\"one\">ID</th>\n                    <th className=\"two\">Description</th>\n                    <th className=\"three\">Amount</th>\n                    <th className=\"four\">Recipient</th>\n                    <th className=\"five\">Approval Count</th>\n                    <th className=\"six\">Approve</th>\n                    <th className=\"seven\">Finalize</th>\n                </tr>\n                {requests}\n            </table>\n            <div className=\"loader-container\" style={this.state.loading===false?{display: \"none\"}:{display:\"flex\"}}>\n                <div className=\"loader\"></div>\n            </div>\n            <div className=\"error-message\" style={this.state.errorVisible?{display: \"block\"}:{display: \"none\"}} >{this.state.errorMessage}</div>\n        </div>\n    }\n}\n\nfunction mapStateToProps(state){\n    \n    let newState = {\n        requests: state.getRequests.requests,\n        approversCount: state.getRequests.approversCount\n    }\n    return newState;\n}\n\nexport default connect(mapStateToProps,null)(Requests);","import React,{Component} from \"react\";\nimport Header from \"../containers/Header\";\nimport {connect} from \"react-redux\";\nimport initWeb3 from \"../services/web3\";\nimport {abi} from \"../build/Campaign.json\";\n\nclass NewRequest extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            handlingTransaction: false,\n            description:\"\",\n            value: \"\",\n            recipient: \"\",\n            errorVisible: false,\n            errorMessage: \"\"\n        }\n        this.handleFormChanges = this.handleFormChanges.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    }\n\n    async handleFormSubmit(e){\n        e.preventDefault();\n        const {description,value,recipient} = {...this.state};\n        if(description.length>0&&value.length>0&&isFinite(value)&&recipient.length>0)\n        {\n            // try{\n                this.setState({\n                    handlingTransaction: true\n                })\n                const web3Instance = await initWeb3();\n                const accounts = await web3Instance.eth.getAccounts();\n                const campaignInstance = await new web3Instance.eth.Contract(abi,this.props.match.params.id);\n                console.log(accounts[0])\n\n                await campaignInstance.methods.createRequest(description,\n                    web3Instance.utils.toWei(value,'ether'),\n                    recipient).send({\n                        from: accounts[0]\n                    });\n                this.props.history.push(`\\campaigns\\${this.props.match.params.id}\\requests`); \n                \n            // }\n            // catch(e){\n            //     this.setState({\n            //         errorVisible: true,\n            //         errorMessage: e.message,\n            //         handlingTransaction: false\n            //     });\n            //     setTimeout(()=>{\n            //         this.setState({\n            //             errorVisible: false,\n            //             errorMessage: \"\"\n            //         });\n            //     },3000);\n            // }\n        }\n        else{\n            this.setState({\n                errorVisible: true,\n                errorMessage: \"One or more fields appear to be empty or have invalid inputs\"\n            });\n            setTimeout(()=>{\n                this.setState({\n                    errorVisible: false,\n                    errorMessage: \"\"\n                });\n            },3000);\n            return;\n        }\n    }\n\n    handleFormChanges(e){\n        const cn=e.target.className;\n        if(cn == \"value\"){\n            if(!isFinite(e.target.value))\n                return;\n        }\n        const value = e.target.value;\n        switch(cn){\n            case \"description\":\n                this.setState({\n                    \"description\": value\n                });\n                return;\n            case \"value\":\n                this.setState({\n                    \"value\": value\n                });\n                return;\n            case \"recipient\":\n                this.setState({\n                    \"recipient\": value\n                });\n                return;\n            default:\n                return;\n        }\n    }\n\n    render(){\n        return <div className=\"new-request\">\n            <Header></Header>\n            <h2>Create a Request</h2>\n            <form onSubmit={this.handleFormSubmit}>\n                <div className=\"input-box-new\">\n                    <p>Description</p>\n                    <input className=\"description\" type=\"text\" value={this.state.description} onChange={this.handleFormChanges}></input>\n                    <p>Value in Ether</p>\n                    <input className=\"value\" type=\"text\" value={this.state.value} onChange={this.handleFormChanges}></input>\n                    <p>Recipient</p>\n                    <input className=\"recipient\" type=\"text\" value={this.state.recipient} onChange={this.handleFormChanges}></input>\n                    <div className=\"error-message\" style={this.state.errorVisible?{display: \"block\"}:{display: \"none\"}} >{this.state.errorMessage}</div>\n                    <div className=\"button\" onClick={this.handleFormSubmit}>\n                        <p style={this.state.handlingTransaction?{display: \"none\"}:{display: \"block\"}}>Create!</p>\n                        <div className=\"loader\" style={this.state.handlingTransaction?{display: \"block\"}:{display: \"none\"}}></div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    }\n}\n\nfunction mapStatetoProps(state){\n    const {getCampaignDetails} = {...state};\n    return getCampaignDetails;\n}\n\nexport default connect(mapStatetoProps,null)(NewRequest);","import React from 'react';\nimport {Switch,Route,Link} from \"react-router-dom\";\nimport Home from \"../components/Home\";\nimport {connect} from 'react-redux';\nimport {loadAccounts} from \"../store/actions/loadAccounts\";\nimport {deployedCampaigns} from \"../store/actions/deployedCampaigns\";\nimport Error from \"../components/Error\";\nimport NewCampaign from \"../components/NewCampaign\";\nimport ShowCampaign from \"../components/ShowCampaign\";\nimport Requests from \"../components/Requests\";\nimport NewRequest from \"../components/NewRequest\";\n\nclass App extends React.Component{\n\n  constructor(props){\n    super(props);\n  }\n\n  async componentDidMount(){\n    await this.props.dispatch(deployedCampaigns());\n  }\n\n  render(){\n    return (\n      <Switch>\n          <Route path=\"/\" component={Home} exact></Route>\n          <Route path=\"/campaigns/new\" component={NewCampaign}></Route>\n          <Route path=\"/campaigns/:id/requests/new\" component={NewRequest}></Route>\n          <Route path=\"/campaigns/:id/requests\" component={Requests}></Route>\n          <Route path=\"/campaigns/:id\" component={ShowCampaign}></Route>\n          <Route path=\"/*\" component={Error}></Route>\n      </Switch>\n    );\n  }\n}\n\nfunction mapStateToProps(state){\n  return state;\n}\n\nexport default connect(mapStateToProps,null)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {LOAD_ACCOUNTS} from \"../actionTypes\";\n\nconst defaultState = {\n    account : 0,\n    accountObj: null,\n}\n\nexport default function loadAccounts(state=defaultState,action){\n    switch(action.type){\n        case LOAD_ACCOUNTS:\n            return {\n                ...state,\n                account: action.account,\n                accountObj: action.accountObj,\n            };\n        default:\n            return state;\n    }\n}","import {DEPLOYED_CAMPAIGNS} from \"../actionTypes\";\n\nconst defaultState= {\n    campaigns: []\n}\n\nexport default function deployedCampaigns(state=defaultState,action){\n    switch(action.type){\n        case DEPLOYED_CAMPAIGNS:\n            return {\n                ...state,\n                campaigns: action.campaigns\n            }\n        default:\n            return state;\n    }\n}","import {GET_CAMPAIGN_DETAILS} from \"../actionTypes\";\n\nconst defaultState = {\n    minimumContribution: 0,\n    balance: 0.0,\n    approversCount: 0,\n    requestsLength: 0,\n    manager: 0x0,\n}\n\nexport default function getCampaignDetails(state=defaultState, action){\n    switch(action.type){\n        case GET_CAMPAIGN_DETAILS:\n            return {\n                ...state,\n                minimumContribution: action.minimumContribution,\n                balance: action.balance,\n                approversCount: action.approversCount,\n                requestsLength: action.requestsLength,\n                manager: action.manager\n            };\n        default:\n            return state;\n    }\n}","import {GET_REQUESTS} from \"../actionTypes\";\n\nconst defaultState = {\n    requests: [],\n    approversCount: 0\n}\n\nexport default function getRequests(state = defaultState, action){\n    switch(action.type){\n        case GET_REQUESTS:\n            return {\n                ...state,\n                requests: action.requests,\n                approversCount: action.approversCount\n            };\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\"; \nimport loadAccounts from \"./loadAccounts\";\nimport deployedCampaigns from \"./deployedCampaigns\";\nimport getCampaignDetails from \"./getCampaignDetails\";\nimport getRequests from \"./getRequests\";\n\nconst rootReducer = combineReducers({\n    loadAccounts,\n    deployedCampaigns,\n    getCampaignDetails,\n    getRequests\n});\n\nexport default rootReducer;","import {createStore,applyMiddleware,compose} from \"redux\";\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\nimport {createLogger} from 'redux-logger';\n\nconst logger = createLogger({\n  /* https://github.com/evgenyrodionov/redux-logger */\n  collapsed: true,\n  diff: true\n});\n\nexport function configureStore(){\n    let store = createStore(\n        rootReducer,\n        composeWithDevTools(\n            applyMiddleware(thunk, logger),\n            // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n        )\n    );\n    return store;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {configureStore} from \"./store\";\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}